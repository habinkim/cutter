plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '4.0.2'
}

group = 'io.stockfolio'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('generated', file("src/main/generated"))
	set('snippetsDir', file("build/generated-snippets"))
	set('docsDir', "src/main/resources/static/docs")
	set('awssdkVersion', "2.25.45")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.zalando:logbook-spring-boot-starter:3.9.0'
	implementation 'net.bramp.ffmpeg:ffmpeg:0.8.0'
	implementation 'com.github.f4b6a3:ulid-creator:5.2.3'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.1'
	implementation 'commons-io:commons-io:2.16.1'

	implementation 'software.amazon.awssdk:s3'
	implementation 'software.amazon.awssdk:cloudfront'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	runtimeOnly 'org.postgresql:postgresql'


	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.apache.commons:commons-lang3:3.15.0'

	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
	main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.compilerArgs << '-parameters'
	options.annotationProcessorGeneratedSourcesDirectory(file(generated))
}

compileJava.doFirst {
	delete file(generated)
}

asciidoctor {
	dependsOn test
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	sources {
		include("**/index.adoc")
	}

	baseDirFollowsSourceFile()

	doFirst {
		delete {
			file("${docsDir}")
		}
	}

	doLast {
		copy {
			from(file("build/docs/asciidoc"))
			into(file("${docsDir}"))
		}
	}
}

jar {
	enabled = false
}

bootJar {
	dependsOn 'asciidoctor'
	from("${docsDir}") {
		into "static/docs"
	}
}

dependencyManagement {
	imports {
		mavenBom "software.amazon.awssdk:bom:${awssdkVersion}"
	}
}
